{
    "collab_server" : "",
    "contents" : "#' @export\nlogML <- function(X, target, alpha)\n{\n  # useful variables\n  X <- t(scale(t(X), center = T, scale=F))\n  n <- ncol(X)\n  p <- nrow(X)\n  S <- tcrossprod(X)/n\n  beta <- alpha/(1-alpha)\n  nu <- beta*n + p + 1\n\n\n  # first terms are a quotient of gamma functions\n  r <- length(alpha)\n  j <- 1:p\n  y1 <- matrix(rep(nu, p), r, p)\n  w <- t(matrix(rep(1-j, r), p, r))\n  z1 <- lgamma((y1+w)/2)\n  z1 <- rowSums(z1)\n\n  y2 <- matrix(rep(nu+n, p), r, p)\n  z2 <- lgamma((y2+w)/2)\n  z2 <- rowSums(z2)\n\n  gammaTerm <- z2-z1\n\n  # terms of determinant quotient\n  logdet1 <- nu/2*sapply(beta, function(x){determinant(x = x*target, logarithm=TRUE)$modulus})\n  logdet2 <- (nu+n)/2*sapply(beta, function(x){determinant(x=x*target+S, logarithm=TRUE)$modulus})\n\n  logdetTerm <- logdet1-logdet2\n\n  # total\n  gammaTerm+logdetTerm-((n*p)/2)*log(n*pi)\n}\n",
    "created" : 1491320530095.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1622580048",
    "id" : "FB835A9D",
    "lastKnownWriteTime" : 1491323606,
    "last_content_update" : 1491323606644,
    "path" : "~/R/packages/TAS/R/logML.R",
    "project_path" : "R/logML.R",
    "properties" : {
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}